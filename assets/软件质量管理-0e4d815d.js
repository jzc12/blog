import{o as t,c as l,a as e}from"./index-9e44edad.js";const c="/blog/assets/scrum-framework-468ddcf3.png",r={class:"markdown-body"},s="2025-06-10T00:00:00.000Z",m="2025-06-12T00:00:00.000Z",h="2025spring",k="软件质量管理复习",b={__name:"软件质量管理",setup(u,{expose:o}){return o({frontmatter:{date:"2025-06-10T00:00:00.000Z",updated:"2025-06-12T00:00:00.000Z",category:"2025spring",summary:"软件质量管理复习"}}),(a,p)=>(t(),l("div",r,p[0]||(p[0]=[e('<h2>Scrum</h2><h3>1.结构</h3><p><img src="'+c+'" alt="scrum-framework"></p><h3>2. “33355”</h3><ul><li>三大支柱：</li></ul><blockquote><p>透明：团队内所有重要信息都可见、清晰</p><p>检视：定期检查进度、过程和产品，以便发现问题</p><p>适应：根据检视结果进行调整、优化过程和产品方向</p></blockquote><ul><li>五个价值：</li></ul><blockquote><p>承诺</p><p>专注</p><p>开放</p><p>尊重</p><p>勇气</p></blockquote><ul><li>三个角色：</li></ul><blockquote><p>PO：负责最大化产品价值和开发团队的工作价值，管理产品Backlog</p><p>Scrum Master:按照Scrum 指南的规则建立Scrum ，服务Scrum Team、PO、组织</p><p>开发人员</p></blockquote><ul><li>三个工件：</li></ul><blockquote><p>产品Backlog、Sprint Backlog、增量</p></blockquote><ul><li>五个事件</li></ul><blockquote><p>Sprint</p><p>Sprint 每日计划</p><p>每日Scrum 会议</p><p>Sprint 评审会议</p><p>Sprint 回顾会议</p></blockquote><h3>3.需求——用户故事模板</h3><blockquote><p>作为 &lt; &gt; ——用户画像</p><p>我想 &lt; &gt; ——预期功能</p><p>从而 &lt; &gt; ——为什么用户想要这个功能</p></blockquote><h3>4.Ron Jeffries 的 3C 原则</h3><blockquote><p>卡片：在一堆卡片上写下期望的软件特性</p><p>交谈：聚在一起对要开发的软件进行深入讨论</p><p>确认：对完工条件进行确认</p></blockquote><ul><li>DOD （完成的定义） ——Definition of Done</li><li>BDD (行为驱动开发) ——Behavior-Driven Development <ul><li>核心思想是通过定义软件的行为来驱动开发过程</li><li>重点是增强团队对需求的理解，并确保开发的软件满足业务目标</li><li>强调在开发开始之前，用自然语言描述软件应如何行为</li></ul></li></ul><h3>5. 用户故事 INVEST原则</h3><h3>6. 用户故事SMART原则</h3><h3>7.产品Backlog</h3><h2>XP</h2><h2>Kanban</h2><h2>DevOps</h2><h2>敏捷</h2>',26)])))}};export{h as category,s as date,b as default,k as summary,m as updated};
