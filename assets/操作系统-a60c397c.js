const n=`---
date: 2025-07-01
updated: 2025-07-01
category: 考研复习
summary: 操作系统
---
# 第一章 计算机系统概述



## 1.1 操作系统的基本概念





## 1.2 发展历程





## 1.3 运行的环境



> 特权指令
>
> 非特权指令

### 3.1 内核操作

1. 时钟管理

2. 中断机制

3. 原语
4. 系统控制的数据结构及处理



### 3.2 中断和异常的概念

1. 定义

\`\`\`mermaid
graph LR
    A[中断] --> B[内部异常]
    A --> C[外部中断（硬件）]
    B --> D[故障（Fault）] --> G[软件中断]
    B --> E[自陷（Trap）] --> H[软件中断]
    B --> F[终止（Abort）] --> I[硬件中断]
    C --> J[可屏蔽中断 INTR]
    C --> K[不可屏蔽中断 NMI]
\`\`\`

访管指令 – trap 指令



2. 处理过程

\`\`\`mermaid
flowchart LR
    A[CPU执行用户程序第i条指令] --> B{检测到异常事件\\n或中断请求信号?}
    B -- 是 --> C[打断当前程序]
    C --> D[转至中断/异常处理程序]
    D --> E{问题可解决?}
    E -- 是 --> F[执行中断返回指令]
    F --> G[返回用户程序\\n第i或i+1条指令]
    E -- 否 --> H[终止用户程序]
    B -- 否 --> A

    classDef decision fill:#f8f9fa,stroke:#495057,stroke-width:2px
    classDef process fill:#e9f5ff,stroke:#228be6
    class B,E decision
    class A,C,D,F,G,H proces
\`\`\`



### 3.3 系统调用

1. 按功能分类

> 设备管理
>
> 文件管理
>
> 进程控制
>
> 进程通信
>
> 内存管理

2. 处理过程

<img src="./../../public/assets/系统调用.jpg" alt="系统调用" style="zoom:25%;" />











## 1.4 操作系统结构



### 4.1 分层法

优点：

问题：

### 4.2 模块化



### 4.3 宏内核



### 4.4 微内核



### 4.5 外核





## 1.5 操作系统引导

**1. 激活CPU**

**2. 硬件自检**

**3. 加载带有操作系统的硬盘**

**4. 加载主引导记录 MBR**

**5. 扫描硬盘分区表**

**6. 加载分区引导记录 PBR**

**7. 加载启动管理器**

**8. 加载操作系统**



## 1.6 虚拟机







# 第二章 进程 & 线程

## 2.1 进程

### 1.1 基本概念

>  **目的**： 为允许多个程序并发执行、更好的描述和控制程序的并发执行，实现操作系统的并发性和共享性。

> **PCB （Process Control Block）**: 进程控制块，描述进程的基本情况和运行状态，进而控制和管理进程

> 进程是一个程序及其数据从磁盘加载到内存后，在CPU上的执行过程； **是系统进行资源分配和调度的基本单位**

特征（理解）：动态、并发、独立、异步



### 1.2 进程的组成

#### PCB

> ​	进程创建时，操作系统为它新建一个PCB，该结构之后常驻内存，任何时刻都可以存取，并在进程结束时删除。 PCB是进程实体的一部分，是进程存在的唯一标志。
>
> ​	进程执行时，系统通过其 PCB了解进程的现行状态信息，以便操作系统对其进行控制和管理；进程结束时，系统收回其PCB，该进程随之消亡。
>
> ​	当操作系统希望调度某个进程运行时，要从该进程的PCB中查出其现行状态及优先级；在调度到某个进程后，要根据其PCB中所保存的CPU状态信息，设置该进程恢复运行的现场，并根据其PCB中的程序和数据的内存始址，找到其程序和数据；进程在运行过程中，当需要和与之合作的进程实现同步、通信或访问文件时，也需要访问PCB；当进程由于某种原因此暂停运行时，又需将其断点的 CPU环境保存在PCB中。可见，在进程的整个生命期中，系统总是通过PCB对进程进行控制的，亦即系统唯有通过进程的PCB才能感知到该进程的存在。

**PCB通常包含的内容**

| 进程描述信息    | 进程控制和管理信息 | 资源分配清单 | 处理机相关信息 |
| --------------- | ------------------ | ------------ | -------------- |
| 进程标识符(PID) | 进程当前状态       | 代码段指针   | 通用寄存器值   |
| 用户标识符(UID) | 进程优先级         | 数据段指针   | 地址寄存器值   |
|                 | 代码运行入口地址   | 堆栈段指针   | 控制寄存器值   |
|                 | 程序的外存地址     | 文件描述符   | 标志寄存器值   |
|                 | 进入内存时间       | 键盘         | 状态字         |
|                 | CPU占用时间        | 鼠标         |                |
|                 | 信号量使用         |              |                |

**PCB组织方式**

> 链接
>
> 索引



#### 程序段

#### 数据段

### 1.3 进程的状态与转换



![进程状态](./../../public/assets/进程状态.png)

### 1.4 进程控制

> 操作系统中，一般将进程控制用的程序程称为原语（不允许终端、不允许分割）。

#### 进程的创建

#### 进程的终止

#### 进程的阻塞和唤醒







## 2.2 线程





## 2.3 CPU调度





## 2.4 同步与互斥





## 2.5 死锁



# 第三章 内存管理

## 3.1 内存管理



## 3.2 虚拟内存管理







# 第四章 文件管理



# 第五章 输入输出





`;export{n as default};
